// Generated by   : ImageConverter 565 Online
// Generated from : battery_half.jpg
// Time generated : Wed, 23 Aug 23 06:59:26 +0200  (Server timezone: CET)
// Image Size     : 25x15 pixels
// Memory usage   : 750 bytes
#include <Arduino.h>

#if defined(__AVR__)
    #include <avr/pgmspace.h>
#elif defined(__PIC32MX__)
    #define PROGMEM
#elif defined(__arm__)
    #define PROGMEM
#endif

const unsigned short battery_half[375] PROGMEM={
0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0010 (16) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFDF,   // 0x0020 (32) pixels
0xFFFE, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0030 (48) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xE79D, 0x9D56, 0x8D37, 0x8D36, 0x8D16, 0x9516, 0x8D15, 0x9535, 0x8D15,   // 0x0040 (64) pixels
0x9535, 0x8D35, 0x9515, 0xA5B7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0050 (80) pixels
0x7454, 0xA617, 0xBE9E, 0xBEBE, 0xBE9E, 0xBE7D, 0xB67E, 0xB65D, 0xB65A, 0xB619, 0xBE18, 0xBE5A, 0x9534, 0xA5B6, 0xFFDF, 0xFFFF,   // 0x0060 (96) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x74B3, 0xFFFF, 0xFF2F, 0xFECE, 0xFEEF, 0xFF4E, 0xFF6E,   // 0x0070 (112) pixels
0xFF6F, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF, 0xEF9E, 0x53AD, 0xB61A, 0xFFFF, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0080 (128) pixels
0xFFFF, 0xFFFF, 0x7CB8, 0xF759, 0xE500, 0xD4A0, 0xDCE0, 0xFDA0, 0xFDA0, 0xFDC1, 0xFF79, 0xFFFF, 0xFFDF, 0xFFFF, 0xFFDE, 0xC69B,   // 0x0090 (144) pixels
0x6452, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFE, 0xFFFF, 0xFFFF, 0xFFFF, 0x7CF6, 0xF79A, 0xED60, 0xDD00, 0xDD40,   // 0x00A0 (160) pixels
0xFE00, 0xFDE0, 0xFE00, 0xFF99, 0xFFFF, 0xFFDF, 0xF7FF, 0xFFFF, 0xFFFF, 0x7CB5, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x00B0 (176) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x6C54, 0xDEB8, 0xE561, 0xDD20, 0xDD41, 0xFDE0, 0xFE00, 0xFE00, 0xE6D7, 0xDF3F, 0xE71B, 0xDEFC,   // 0x00C0 (192) pixels
0xE73C, 0xE73C, 0x6C32, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x6BF3, 0xDE77, 0xE540,   // 0x00D0 (208) pixels
0xDD00, 0xDD40, 0xFE00, 0xFDE0, 0xFDE0, 0xDE96, 0xCEDE, 0xD6BA, 0xD6BA, 0xE71C, 0xE6FB, 0x5BB0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x00E0 (224) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x6C14, 0xE6F9, 0xEDA2, 0xE541, 0xE561, 0xFE22, 0xFE22, 0xFE42, 0xEED6, 0xE71F,   // 0x00F0 (240) pixels
0xE71B, 0xF77D, 0xD69A, 0x5BB0, 0x7C93, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFFF, 0xFFFF, 0x5B6F,   // 0x0100 (256) pixels
0xBE59, 0xE6FA, 0xD698, 0xD699, 0xD699, 0xD6B8, 0xD699, 0xD6BA, 0xD6BA, 0xD6BB, 0xE73D, 0xAD97, 0x5BD0, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0110 (272) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xB61A, 0x7C91, 0x6C32, 0x6C33, 0x6C32, 0x6412, 0x6C12, 0x6C32,   // 0x0120 (288) pixels
0x6C11, 0x6C10, 0x6C11, 0x6C10, 0x7431, 0xE73C, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0130 (304) pixels
0xFFFF, 0xF7FF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0140 (320) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0150 (336) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xF7FF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0160 (352) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFFF, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0170 (368) pixels
};
